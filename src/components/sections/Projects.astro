---
import Section from "../Section.astro";
import { Icon } from "astro-icon/components";
import { projects } from "@cv";
import fs from "fs";
import path from "path";

function getImagesFromFolder(folder) {
  const folderPath = path.resolve(import.meta.env.SITE, "public", folder);
  try {
    return fs
      .readdirSync(folderPath)
      .filter((file) => /\.(png|jpe?g|gif|webp)$/i.test(file))
      .map((file) => `/${folder}/${file}`);
  } catch (error) {
    console.error(`Error reading folder ${folder}:`, error);
    return [];
  }
}
---

<Section className={Astro.props.className} title="Projects">
  <div class="grid grid-cols-1 gap-3 md:grid-cols-2 print:flex print:flex-col">
    {
      projects.map(
        ({ url, description, highlights, name, isActive, github, image }, index) => {
          const isBackgroundImage = image && image?.position === "background";
          const isContainerImage = image && image?.position === "container";

          // Grupo Fancybox único por proyecto
          const fancyboxGroup = `project-${index}`;

          // Lista de imágenes del folder si existe
          let imageList = [];
          if (image?.folder) {
            imageList = getImagesFromFolder(image.folder);
          }

          return (
            <div class="project-card" key={index}>
              <div class="flex items-center gap-2">
                <Icon name="mdi:folder-outline" class="size-4" />
                <div class="flex items-center gap-[6px]">
                  {isActive ? (
                    <a
                      class="group flex items-center gap-[6px] text-lg decoration-dotted underline-offset-[5px] hover:text-skin-hue hover:underline"
                      href={url}
                      target="_blank"
                    >
                      {name}
                      <span class="text-skin-hue transition ease-linear group-hover:-translate-y-0.5 group-hover:translate-x-0.5">
                        <Icon name="ri:arrow-up-line" class="rotate-45" />
                      </span>
                    </a>
                  ) : (
                    <span>{name}</span>
                  )}
                </div>
              </div>

              <p class="text-sm text-gray-600">{description}</p>

              {/* Carrusel de imágenes */}
              {imageList.length > 0 && (
                <div class="relative w-full max-w-md overflow-hidden mt-4">
                  <div
                    class="flex transition-transform duration-500 ease-in-out"
                    style={{ transform: `translateX(-${currentIndex * 100}%)` }}
                  >
                    {imageList.map((img, imgIndex) => (
                      <img
                        key={imgIndex}
                        src={img}
                        alt={`Imagen ${imgIndex + 1} del proyecto ${name}`}
                        class="w-full"
                      />
                    ))}
                  </div>
                  <button
                    class="absolute top-1/2 left-0 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2"
                    onClick={() =>
                      setCurrentIndex((currentIndex - 1 + imageList.length) % imageList.length)
                    }
                  >
                    ‹
                  </button>
                  <button
                    class="absolute top-1/2 right-0 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2"
                    onClick={() =>
                      setCurrentIndex((currentIndex + 1) % imageList.length)
                    }
                  >
                    ›
                  </button>
                </div>
              )}

              {/* Destacados */}
              {highlights && (
                <ul class="mt-2 list-disc list-inside">
                  {highlights.map((highlight, highlightIndex) => (
                    <li key={highlightIndex}>{highlight}</li>
                  ))}
                </ul>
              )}

              {/* Enlace a GitHub */}
              {github && (
                <a
                  href={github}
                  target="_blank"
                  class="mt-2 inline-block text-blue-500 hover:underline"
                >
                  Ver en GitHub
                </a>
              )}
            </div>
          );
        }
      )
    }
  </div>
</Section>